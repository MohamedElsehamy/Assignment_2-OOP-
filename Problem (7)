#include <bits/stdc++.h>
#include "domino.h"
using namespace std;
deque <domino> deq;
domino::domino() {
    leftdots = 0;
    rightdots = 0;
}

domino::domino(int l, int r) {
    leftdots = l;
    rightdots = r;
}

istream & operator>>(istream & input, domino & d) {
    input >> d.leftdots >> d.rightdots;
    return input;
}

ostream & operator<<(ostream & out, domino & d) {
    out << d.leftdots << "|" << d.rightdots;
    return out;
}

bool operator==(domino d1, domino d2) {
    return (d1.rightdots == d2.leftdots);
}

bool isdominochain(vector <domino> v, deque <domino> & deq) {
    if (v.empty())
        return true;
    for (int i = 0; i < v.size(); ++i) {
        if (deq.empty() || deq.back() == v[i]) {
            deq.push_back(v[i]);
            domino tmp = v[i];
            v.erase(v.begin() + i);
            if (isdominochain(v, deq))
                return true;
            v.insert(v.begin() + i, tmp);
            deq.pop_back();
        }

        else if(v[i] == deq.back()) {
            deq.push_front(v[i]);
            domino tmp = v[i];
            v.erase(v.begin() + i);
            if (isdominochain(v, deq))
                return true;
            v.insert(v.begin() + i, tmp);
            deq.pop_front();
        }
    }
    return false;
}

void print(deque <domino> deq) {
    for (int i = 0; i < deq.size(); ++i) {
        cout << deq[i];
        if (i != deq.size() - 1) cout << " - ";
    }
}

int main() {
    cout << "Enter the number of dominos:\n";
    int n;
    cin >> n;
    cout << "Enter the left and right dots for each domino:\n";
    vector <domino> v;
    for (int i = 0; i < n; ++i) {
        domino deck;
        cin >> deck;
        v.push_back(deck);
    }
    if(isdominochain(v,deq)){
        cout << "True" << endl;
        print(deq);
    }
    else
        cout << "False" << endl;

    return 0;
}
