#include <bits/stdc++.h>
using namespace std;


class BigReal {
    char sign;
    string integer, fraction;

    bool isValid(string realNumber) {
        int counter1, counter2;
        bool flag = true;
        counter1 = count(realNumber.begin(), realNumber.end(), '+') + count(realNumber.begin(), realNumber.end(), '-');
        counter2 = count(realNumber.begin(), realNumber.end(), '.');
        if (regex_match(realNumber,regex("[+-]?\\d*.?\\d+"))){
            flag = true;
        }
        if (realNumber[0] != '.' && realNumber[0] != '+' && realNumber[0] != '-') {
            if ((int) realNumber[0] < 48 || (int) realNumber[0] > 57) {
                flag = false;
            }
        }
        for (int i = 0; i < realNumber.size(); ++i) {
            if (realNumber[i] == '+' || realNumber[i] == '-') {
                if (i > 0)
                    return false;
            }
        }
        if (counter2 > 1) {
            flag = false;
        }
        if (counter1 > 1) {
            flag = false;
        }

        if (count(realNumber.begin(), realNumber.end(), ' ') > 0) {
            flag = false;
        }

        if (flag) {
            return true;
        } else return false;

    }


public:
    BigReal() {
        integer = "0";
        fraction = "0";
        sign = '+';
    }

    BigReal(string realNumber) {
        if (isValid(realNumber)) {
            if (realNumber[0] == '+' || realNumber[0] == '-') {
                sign = realNumber[0];
                realNumber.erase(0, 1);
            } else {
                sign = '+';
            }
            auto ptr = find(realNumber.begin(), realNumber.end(), '.');
            if (ptr == end(realNumber)) {
                integer = realNumber;
            }

            for (int i = 0; i < realNumber.size(); ++i) {
                if (realNumber[i] == '.') {
                    integer = realNumber.substr(0, i);
                    fraction = realNumber.substr(i + 1, realNumber.size());
                    break;
                }
            }
            if (integer.size() == 0) {
                integer = "0";
            }
            if (fraction.size() == 0) {
                fraction = "0";
            }
        } else {
            integer = "0";
            fraction = "0";
            sign = '+';
        }
    }

    BigReal(const BigReal &other) {
        sign = other.sign;
        integer = other.integer;
        fraction = other.fraction;
    }

    BigReal &operator=(const BigReal &other) {
        sign = other.sign;
        integer = other.integer;
        fraction = other.fraction;
    }

    BigReal operator+(BigReal &other) {

        if (integer.size() != other.integer.size()) {
            int diff;
            if (integer.size() > other.integer.size()) {
                diff = integer.size() - other.integer.size();
                for (int i = 0; i < diff; ++i) {
                    other.integer.insert(0, "0");
                }
            } else {
                diff = other.integer.size() - integer.size();
                for (int i = 0; i < diff; ++i) {
                    integer.insert(0, "0");
                }
            }
        }
        if (fraction.size() != other.fraction.size()) {
            int diff;
            if (fraction.size() > other.fraction.size()) {
                diff = fraction.size() - other.fraction.size();
                for (int i = 0; i < diff; ++i) {
                    other.fraction += "0";
                }
            } else {
                diff = other.fraction.size() - fraction.size();
                for (int i = 0; i < diff; ++i) {
                    fraction += "0";
                }
            }
        }
        BigReal res,ob;
        ob.sign =sign;
        ob.integer = integer;
        ob.fraction = fraction;
        res = other;
        if (sign == other.sign) {
            int carry = 0;
            for (int i = fraction.size() - 1; i >= 0; --i) {
                int a, b, sum;
                a = (int) fraction[i] - 48;
                b = (int) other.fraction[i] - 48;
                sum = a + b + carry;
                if (sum > 9) {
                    carry = 1;
                    sum -= 10;
                } else {
                    carry = 0;
                }
                res.fraction[i] = sum + 48;

            }
            for (int i = integer.size() - 1; i >= 0; --i) {
                int a, b, sum;
                a = (int) integer[i] - 48;
                b = (int) other.integer[i] - 48;
                sum = a + b + carry;
                if (sum > 9) {
                    carry = 1;
                    sum -= 10;
                } else {
                    carry = 0;
                }
                res.integer[i] = sum + 48;
            }
            if (carry != 0) {
                res.integer.insert(0, "1");
            }

        }
        else{
            if(sign =='+'){
                other.sign = '+';
                res = ob - other;
            }
            else{
                ob.sign = '+';
                res = other - ob;
            }

        }

        return res;

    }


    BigReal operator-(BigReal &other) {
        BigReal total;
        int diff;
        if (integer.size() != other.integer.size()) {
            int diff;
            if (integer.size() > other.integer.size()) {
                diff = integer.size() - other.integer.size();
                for (int i = 0; i < diff; ++i) {
                    other.integer.insert(0, "0");
                }
            } else {
                diff = other.integer.size() - integer.size();
                for (int i = 0; i < diff; ++i) {
                    integer.insert(0, "0");
                }
            }
        }
        if (fraction.size() != other.fraction.size()) {
            int diff;
            if (fraction.size() > other.fraction.size()) {
                diff = fraction.size() - other.fraction.size();
                for (int i = 0; i < diff; ++i) {
                    other.fraction += "0";
                }
            } else {
                diff = other.fraction.size() - fraction.size();
                for (int i = 0; i < diff; ++i) {
                    fraction += "0";
                }
            }
        }
        BigReal ob, sub;
        ob.sign = sign;
        ob.integer = integer;
        ob.fraction = fraction;
        if (ob.sign == '+' && other.sign == '-') {
            other.sign = '+';
            total = ob + other;
            return total;
        }
        else if (ob.sign == '-' && other.sign == '+') {
            other.sign = '-';
            total = ob + other;
            return total;
        }
        else {
            if(ob>other){
                if (ob.sign == '+'){
                    total = ob;
                    sub = other;
                }
                else{
                    total = other;
                    sub = ob;
                    total.sign = '+';
                }
            }
            else{
                if (ob.sign == '+'){
                    total = other;
                    sub = ob;
                    total.sign = '-';
                }
                else{
                    total = ob;
                    sub = other;
                }

            }
            bool borrow = false, borrowInt = false;
            for (int i = total.fraction.size() - 1; i >= 0; --i) {
                int a, b, sum;
                a = (int) total.fraction[i] - 48;
                b = (int) sub.fraction[i] - 48;
                if (a < b) {
                    borrow = true;
                    sum = (a + 10) - b;
                    if (i == 0) {
                        borrowInt = true;
                        borrow = false;
                    }
                }
                else {
                    sum = a - b;
                    borrow = false;
                }
                total.fraction[i] = sum + 48;
                if (borrow) {
                    if (total.fraction[i - 1] != '0') {
                        total.fraction[i - 1] -= 1;
                    }
                    else {
                        int counter = i;
                        while (total.fraction[counter - 1] == '0') {
                            total.fraction[counter - 1] = '9';
                            counter--;
                        }
                        if (total.fraction[counter - 1] == '.') {
                            borrowInt = true;
                            cout << "borrowInt" << endl;
                        } else {
                            total.fraction[counter - 1] -= 1;
                        }
                    }
                }
            }
            if (borrowInt) {
                if (total.integer[total.integer.size() - 1] != '0') {
                    total.integer[total.integer.size() - 1] -= 1;
                } else {
                    int counter = total.integer.size();
                    while (total.integer[counter - 1] == '0') {
                        total.integer[counter - 1] = '9';
                        counter--;
                    }

                    total.integer[counter - 1] -= 1;

                }
            }
            for (int i = total.integer.size() - 1; i >= 0; --i) {

                int a, b, sum;
                a = (int) total.integer[i] - 48;
                b = (int) sub.integer[i] - 48;

                if (a < b) {
                    borrow = true;
                    sum = (a + 10) - b;
                }
                else {
                    sum = a - b;
                    borrow = false;
                }
                total.integer[i] = sum + 48;
                if (borrow) {
                    if (total.integer[i - 1] != '0') {
                        total.integer[i - 1] -= 1;
                    } else {
                        int counter = i;
                        while (total.integer[counter - 1] == '0') {
                            total.integer[counter - 1] = '9';
                            counter--;
                        }

                        total.integer[counter - 1] -= 1;

                    }
                }
            }
        }
        return total;
    }


    void print(){
        cout<<sign<<integer<<"."<<fraction<<endl;
    }

    bool operator<(BigReal &other){
        if (integer.size() != other.integer.size()) {
            int diff;
            if (integer.size() > other.integer.size()) {
                diff =  integer.size()-other.integer.size() ;
                for (int i = 0; i < diff; ++i) {
                    other.integer.insert(0, "0");
                }
            }
            else{
                diff =  other.integer.size()-integer.size() ;
                for (int i = 0; i < diff; ++i) {
                    integer.insert(0, "0");
                }
            }
        }
        if (fraction.size() != other.fraction.size()) {
            int diff;
            if (fraction.size() > other.fraction.size()) {
                diff = fraction.size()- other.fraction.size()  ;
                for (int i = 0; i < diff; ++i) {
                    other.fraction += "0";
                }
            }

            else{
                diff =   other.fraction.size()-fraction.size() ;
                for (int i = 0; i < diff; ++i) {
                    fraction += "0";
                }
            }
        }
        if(sign == '+' and other.sign =='-'){

            return false;
        }
        else if(sign == '-' and other.sign =='+'){

            return true;
        }
        else {
            if(integer == other.integer && fraction == other.fraction){

                return false;
            }
            if (sign == '+'){
                for (int i = 0; i < integer.size(); ++i) {
                    if((int)integer[i]>(int)other.integer[i]){

                        return false;
                    }
                    else if ((int)integer[i]<(int)other.integer[i]){

                        return true;
                    }
                }
                for (int i = 0; i < fraction.size(); ++i) {
                    if((int)fraction[i]>(int)other.fraction[i]){

                        return false;
                    }
                    else if ((int)fraction[i]<(int)other.fraction[i]){

                        return true;
                    }
                }
            }
            else{
                for (int i = 0; i < integer.size(); ++i) {
                    if((int)integer[i]>(int)other.integer[i]){

                        return true;
                    }
                    else if ((int)integer[i]<(int)other.integer[i]){

                        return false;
                    }
                }
                for (int i = 0; i < fraction.size(); ++i) {
                    if((int)fraction[i]>(int)other.fraction[i]){

                        return true;
                    }
                    else if ((int)fraction[i]<(int)other.fraction[i]){

                        return false;
                    }
                }
            }


        }
    }

    bool operator>(BigReal &other){
        if (integer.size() != other.integer.size()) {
            int diff;
            if (integer.size() > other.integer.size()) {
                diff =  integer.size()-other.integer.size() ;
                for (int i = 0; i < diff; ++i) {
                    other.integer.insert(0, "0");
                }
            }
            else{
                diff =  other.integer.size()-integer.size() ;
                for (int i = 0; i < diff; ++i) {
                    integer.insert(0, "0");
                }
            }
        }
        if (fraction.size() != other.fraction.size()) {
            int diff;
            if (fraction.size() > other.fraction.size()) {
                diff = fraction.size()- other.fraction.size()  ;
                for (int i = 0; i < diff; ++i) {
                    other.fraction += "0";
                }
            }

            else{
                diff =   other.fraction.size()-fraction.size() ;
                for (int i = 0; i < diff; ++i) {
                    fraction += "0";
                }
            }
        }
        if(sign == '+' and other.sign =='-'){

            return true;
        }
        else if(sign == '-' and other.sign =='+'){

            return false;
        }
        else {
            if(integer == other.integer && fraction == other.fraction){

                return false;
            }
            if (sign == '+'){
                for (int i = 0; i < integer.size(); ++i) {
                    if((int)integer[i]>(int)other.integer[i]){

                        return true;
                    }
                    else if ((int)integer[i]<(int)other.integer[i]){

                        return false;
                    }
                }
                for (int i = 0; i < fraction.size(); ++i) {
                    if((int)fraction[i]>(int)other.fraction[i]){

                        return true;
                    }
                    else if ((int)fraction[i]<(int)other.fraction[i]){

                        return false;
                    }
                }
            }
            else{
                for (int i = 0; i < integer.size(); ++i) {
                    if((int)integer[i]>(int)other.integer[i]){

                        return false;
                    }
                    else if ((int)integer[i]<(int)other.integer[i]){

                        return true;
                    }
                }
                for (int i = 0; i < fraction.size(); ++i) {
                    if((int)fraction[i]>(int)other.fraction[i]){

                        return false;
                    }
                    else if ((int)fraction[i]<(int)other.fraction[i]){

                        return true;
                    }
                }
            }


        }
    }
    bool operator==(BigReal &other) {
        bool flag = true;
        if(sign == other.sign){
            if (integer.size() != other.integer.size()) {
                int diff;
                if (integer.size() > other.integer.size()) {
                    diff =  integer.size()-other.integer.size() ;
                    for (int i = 0; i < diff; ++i) {
                        other.integer.insert(0, "0");
                    }
                }
                else{
                    diff =  other.integer.size()-integer.size() ;
                    for (int i = 0; i < diff; ++i) {
                        integer.insert(0, "0");
                    }
                }
            }
            if(integer == other.integer){
                if (fraction.size() != other.fraction.size()) {
                    int diff;
                    if (fraction.size() > other.fraction.size()) {
                        diff = fraction.size()- other.fraction.size()  ;
                        for (int i = 0; i < diff; ++i) {
                            other.fraction += "0";
                        }
                    }

                    else{
                        diff =   other.fraction.size()-fraction.size() ;
                        for (int i = 0; i < diff; ++i) {
                            fraction += "0";
                        }
                    }
                    if(fraction == other.fraction){
                        flag = true;
                    }
                    else flag = false;
                }
            }
            else flag = false;
        }
        else flag = false;
        if(flag){
            return true;
        }
        else return false;
    }

    friend ostream &operator<<(ostream &out, const BigReal&num) {
        out<<num.sign<<num.integer<<"."<<num.fraction<<endl;
    }

};



int main(){
    
}
